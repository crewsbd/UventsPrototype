paypal <- require('paypal-rest-sdk')

createPayment(request, response)
    provider <- request.body.provider
    amount <- request.body.amount
    currency <- request.body.currency

    IF provider = "paypal"
        payment_json <- 
        {
            intent: 'sale',
            payer: {
                payment_method: 'paypal',
            },
            redirect_urls: {
                return_url: 'http://root/payment/paypal-success',
                cancel_url: 'http://root/payment/paypal-cancel',
            },
            transactions: [
                {
                    amount: {
                        total: amount,
                        currency: currency,
                    }
                }
            ]
        }
        TRY 
            paypal.payment.create(
                payment_json,
                function(error, payment)
                    IF error exists
                        THROW error
                    ELSE 
                        FOR each payment.links link
                            IF link.rel == "approval_uri"
                                response.redirect(link.href)
            )
        CATCH error
                WRITE error to log
                response.status(500).json({ERROR: "Internal Server Error"})
    ELSE IF provider = "google pay"
        DO STUFF

const getPayment = async (request, response) => {};

const updatePayment = async (request, response) => {};

const deletePayment = async (request, response) => {};

const searchPayment = async (request, response) => {};

/**
 *
 * @param {import('express').Request} request
 * @param {import('express').Response} response
 */
const paypalSuccessRedirect = async (request, response) => {
    // Paypal sends these
    const payerId = request.query.PayerID;
    const paymentId = request.query.paymentId;

    const execute_payment_json = {
        payer_id: payerId,
    };

    // Execute the payment...client confirms payment, then server pulls trigger?
    paypal.payment.execute(
        paymentId,
        execute_payment_json,
        function (error, payment) {
            if (error) {
                console.error(error);
                response.status(500).json({
                    ERROR: `Payment failed: ${error.response.message}`,
                });
            } else {
                console.log('Payment executed successfully');
                response.json({ MESSAGE: 'Payment executed successfully' });
            }
        }
    );
};

/**
 *
 * @param {import('express').Request} request
 * @param {import('express').Response} response
 */
const paypalCancelRedirect = async (request, response) => {
    response.json({ MESSAGE: 'Payment cancelled' });
};

module.exports = {
    createPayment,
    getPayment,
    updatePayment,
    deletePayment,
    searchPayment,
    paypalCancelRedirect,
    paypalSuccessRedirect,
};
